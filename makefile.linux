CC = gcc
CXXFLAGS = -DALSA_DEVICE=\"default\" -Wall -O3 -ggdb -std=c++1y -fPIC -I. -I./linux/
CFLAGS = -Wall -O3 -ggdb
BINS = ./bin/libjukebox.so ./bin/test ./bin/play ./bin/loop
LDFLAGS = -lasound -lpthread -lfluidsynth

include makefile.common

objects += ./linux/Sound/AlsaHandle.o ./linux/Mixer/AlsaMixer.o
SRCS += ./linux/Sound/AlsaHandle.cpp ./linux/Mixer/AlsaMixer.cpp


all					:	$(BINS)
./bin/libjukebox.so	:	$(objects)
	g++ -std=c++1y -ggdb -Wall $(objects) -shared $(LDFLAGS) -o ./bin/libjukebox.so
./bin/test			:	genheader ./jukebox_test/demo/main.o
	g++ -std=c++1y -ggdb -Wall ./jukebox_test/demo/main.cpp -I. -L./bin -ljukebox -o ./bin/test
./bin/play			:	genheader ./jukebox_test/demo/play.o
	g++ -std=c++1y -ggdb -Wall ./jukebox_test/demo/play.cpp -I. -L./bin -ljukebox -o ./bin/play
./bin/loop			:	genheader ./jukebox_test/demo/loop.o ./bin/libjukebox.so
	g++ -std=c++1y -ggdb -Wall ./jukebox_test/demo/loop.o -Lbin -ljukebox -o ./bin/loop

.PHONY		:	clean	genheader
genheader	:
	./genheader.sh
clean		:
	rm -rf $(DEPDIR) $(objects) ./jukebox_test/demo/*.o $(BINS)

DEPDIR := .d
$(shell mkdir -p $(DEPDIR) >/dev/null)
$(shell mkdir -p $(DEPDIR)/jukebox >/dev/null)
$(shell mkdir -p $(DEPDIR)/jukebox/Sound >/dev/null)
$(shell mkdir -p $(DEPDIR)/jukebox/Decoders/Decorators >/dev/null)
$(shell mkdir -p $(DEPDIR)/jukebox/Decoders >/dev/null)      
$(shell mkdir -p $(DEPDIR)/jukebox/FileFormats >/dev/null)
$(shell mkdir -p $(DEPDIR)/jukebox/Mixer >/dev/null)
$(shell mkdir -p $(DEPDIR)/jukebox_test >/dev/null)
$(shell mkdir -p $(DEPDIR)/jukebox_test/demo >/dev/null)
$(shell mkdir -p $(DEPDIR)/linux >/dev/null)
$(shell mkdir -p $(DEPDIR)/linux/Mixer >/dev/null)
$(shell mkdir -p $(DEPDIR)/linux/Sound >/dev/null)
DEPFLAGS = -MT $@ -MMD -MP -MF $(DEPDIR)/$*.Td

COMPILE.c = $(CC) $(DEPFLAGS) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
COMPILE.cc = $(CXX) $(DEPFLAGS) $(CXXFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
POSTCOMPILE = @mv -f $(DEPDIR)/$*.Td $(DEPDIR)/$*.d && touch $@

%.o	:	%.c
%.o	:	%.c $(DEPDIR)/%.d
	$(COMPILE.c) $(OUTPUT_OPTION) $<
	$(POSTCOMPILE)

%.o	:	%.cc
%.o	:	%.cc $(DEPDIR)/%.d
	$(COMPILE.cc) $(OUTPUT_OPTION) $<
	$(POSTCOMPILE)

%.o	:	%.cxx
%.o	:	%.cxx $(DEPDIR)/%.d
	$(COMPILE.cc) $(OUTPUT_OPTION) $<
	$(POSTCOMPILE)

$(DEPDIR)/%.d: ;
.PRECIOUS: $(DEPDIR)/%.d

include $(wildcard $(patsubst %,$(DEPDIR)/%.d,$(basename $(SRCS))))
